{"version":3,"file":"static/js/503.473019a2.chunk.js","mappings":"yQAGaA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yCAIfE,EAAaF,EAAAA,GAAAA,MAAH,6FAMVG,EAAqBH,EAAAA,GAAAA,IAAH,uC,UCHzBI,EAAa,CACjBC,MAAO,GACPC,SAAU,IAGNC,EAAQC,EAAAA,KAAaC,MAAM,CAC/BJ,MAAOG,EAAAA,KAAaH,QAAQK,WAC5BJ,SAAUE,EAAAA,KAAaG,IAAI,GAAGD,aAGnBE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,CACEC,cAAeX,EACfY,iBAAkBT,EAClBU,SAdiB,SAAC,EAAD,GAAyC,IAAtCZ,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcY,EAAgB,EAAhBA,UAC3CL,GACEM,EAAAA,EAAAA,IAAM,CACJd,MAAAA,EACAC,SAAAA,KAGJY,GACD,EAGC,UAKE,UAACnB,EAAD,CAAiBqB,aAAa,MAA9B,WACE,UAAClB,EAAD,oBAEE,SAAC,KAAD,CAAOmB,KAAK,QAAQC,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAnB,SACG,SAAAC,GAAG,OAAI,SAACpB,EAAD,UAAqBoB,GAAzB,QAGR,UAACrB,EAAD,uBAEE,SAAC,KAAD,CAAOmB,KAAK,WAAWC,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAnB,SACG,SAAAC,GAAG,OAAI,SAACpB,EAAD,UAAqBoB,GAAzB,QAGR,mBAAQF,KAAK,SAAb,wBAIP,E,UCtDc,SAASG,IACtB,OACE,2BACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACd,EAAD,QAIP,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const LoginFormStyled = styled(Form)`\n  width: 320px;\n`;\n\nexport const LoginLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const ErrorMessageStyled = styled.div`\n  color: red;\n`;\n","import { useDispatch } from 'react-redux';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  ErrorMessageStyled,\n  LoginFormStyled,\n  LoginLabel,\n} from './LoginForm.styled';\n\nconst initValues = {\n  email: '',\n  password: '',\n};\n\nconst shema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(7).required(),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initValues}\n      validationSchema={shema}\n      onSubmit={handleSubmit}\n    >\n      <LoginFormStyled autoComplete=\"off\">\n        <LoginLabel>\n          Email\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\">\n            {msg => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\n          </ErrorMessage>\n        </LoginLabel>\n        <LoginLabel>\n          Password\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\">\n            {msg => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\n          </ErrorMessage>\n        </LoginLabel>\n        <button type=\"submit\">Log In</button>\n      </LoginFormStyled>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Box } from 'components/common/Box';\n\nexport default function Login() {\n  return (\n    <main>\n      <Box>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n        <LoginForm />\n      </Box>\n    </main>\n  );\n}\n"],"names":["LoginFormStyled","styled","Form","LoginLabel","ErrorMessageStyled","initValues","email","password","shema","Yup","shape","required","min","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","logIn","autoComplete","type","name","msg","Login","Box","Helmet"],"sourceRoot":""}