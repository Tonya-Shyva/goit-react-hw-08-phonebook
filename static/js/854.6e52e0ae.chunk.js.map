{"version":3,"file":"static/js/854.6e52e0ae.chunk.js","mappings":"4LAEaA,E,QAAYC,GAAAA,OAAH,kO,mLCATC,EAAOD,EAAAA,GAAAA,KAAH,yCAIJE,EAAQF,EAAAA,GAAAA,MAAH,oHAOLG,EAAWH,EAAAA,GAAAA,MAAH,kEAKRI,EAAeJ,EAAAA,GAAAA,KAAH,uI,UCVZK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,SAAC,MAAD,KAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,YAAjC,eAAOG,EAAP,KAAaC,EAAb,KA+CA,OACE,UAACX,EAAD,CAAMY,SApCa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAC5BE,EAAWN,EAAKG,SAASG,SAASF,MAClCG,EAAkBP,EAAKG,SAASI,gBAAgBH,MACtD,GACY,KAAVC,GACa,KAAbC,GACS,KAATJ,GACoB,KAApBK,EAKF,GAAID,EAASE,OAAS,GACpBC,EAAAA,EAAAA,IAAM,gDADR,CAIA,GAAIH,IAAaC,EAGf,OAFAE,EAAAA,EAAAA,IAAM,uCACNT,EAAKG,SAASI,gBAAgBH,MAAQ,IAGxCd,GACEoB,EAAAA,EAAAA,IAAS,CACPR,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAGJN,EAAKW,OAbJ,MANCF,EAAAA,EAAAA,IAAM,6BAoBT,EAG+BG,aAAa,MAA3C,WACE,UAAC1B,EAAD,uBAEE,kBAAOS,KAAK,OAAOO,KAAK,aAE1B,UAAChB,EAAD,oBAEE,kBAAOS,KAAK,QAAQO,KAAK,cAE3B,UAAChB,EAAD,uBAEE,SAACC,EAAD,CAAUQ,KAAMA,EAAMO,KAAK,cAC3B,SAACd,EAAD,CAAcyB,QA1DI,SAAAf,GACT,aAATH,GACFC,EAAQ,QACRF,GAAc,SAAC,MAAD,OAEdE,EAAQ,YACRF,GAAc,SAAC,MAAD,KAEjB,EAkDK,SAAyCD,QAE3C,UAACP,EAAD,+BAEE,kBAAOS,KAAK,WAAWO,KAAK,wBAE9B,SAACnB,EAAA,EAAD,CAAWY,KAAK,SAAhB,wBAGL,E,UC5Ec,SAASmB,IACtB,OACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC3B,EAAD,MAGL,C","sources":["components/common/BtnStyled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnStyled = styled.button`\n  width: 100px;\n  border-radius: 4px;\n  transition: backround-color 250ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #21aeeab5;\n    border-color: transparent;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const InputReg = styled.input`\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconPassword = styled.span`\n  position: absolute;\n  top: 20px;\n  right: 10px;\n  cursor: pointer;\n  user-select: none;\n  z-index: 99;\n`;\n","import { toast } from 'react-hot-toast';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { register } from 'redux/auth/operations';\nimport { BtnStyled } from 'components/common/BtnStyled';\nimport { Form, IconPassword, InputReg, Label } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [toggleIcon, setToggleIcon] = useState(<AiOutlineEyeInvisible />);\n  const [type, setType] = useState('password');\n\n  const togglePassInput = e => {\n    if (type === 'password') {\n      setType('text');\n      setToggleIcon(<AiOutlineEye />);\n    } else {\n      setType('password');\n      setToggleIcon(<AiOutlineEyeInvisible />);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    const confirmPassword = form.elements.confirmPassword.value;\n    if (\n      email === '' ||\n      password === '' ||\n      name === '' ||\n      confirmPassword === ''\n    ) {\n      toast('Please, fill in all fields');\n      return;\n    }\n    if (password.length < 7) {\n      toast('Password must be at least 7 symbols long');\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast('Wrong confirmation of password');\n      form.elements.confirmPassword.value = '';\n      return;\n    }\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </Label>\n      <Label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </Label>\n      <Label>\n        Password\n        <InputReg type={type} name=\"password\" />\n        <IconPassword onClick={togglePassInput}>{toggleIcon}</IconPassword>\n      </Label>\n      <Label>\n        Confirm password\n        <input type=\"password\" name=\"confirmPassword\" />\n      </Label>\n      <BtnStyled type=\"submit\">Register</BtnStyled>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box } from 'components/Box/Box';\n\nexport default function Register() {\n  return (\n    <Box>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  );\n}\n"],"names":["BtnStyled","styled","Form","Label","InputReg","IconPassword","RegisterForm","dispatch","useDispatch","useState","toggleIcon","setToggleIcon","type","setType","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","confirmPassword","length","toast","register","reset","autoComplete","onClick","Register","Box","Helmet"],"sourceRoot":""}